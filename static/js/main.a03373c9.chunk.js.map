{"version":3,"sources":["components/MySelect.js","components/Quote.js","components/Spinner.js","App.js","index.js"],"names":["MySelect","categories","fetchCategory","useState","val","setVal","displayElement","setDisplayElement","categoriesArr","Object","keys","className","onClick","onChange","e","target","value","name","style","display","map","category","i","key","title","handleSetVal","Quote","quote","author","Spinner","App","loaded","setLoaded","setCategories","setQuote","setAuthor","errors","setErrors","date","setDate","useEffect","a","fetch","res","json","data","status","alert","contents","length","fetchCategories","Date","getFullYear","quotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a03373c9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//css\r\nimport \"./MySelect.css\";\r\n\r\nconst MySelect = ({ categories, fetchCategory }) => {\r\n  const [val, setVal] = useState(\"funny\");\r\n  const [displayElement, setDisplayElement] = useState(false);\r\n  const categoriesArr = Object.keys(categories);\r\n  const handleSetVal = val => {\r\n    setVal(val);\r\n    setDisplayElement(false);\r\n    fetchCategory(val);\r\n  };\r\n  const renderMySelectOptions = () => {\r\n    return categoriesArr.map((category, i) => (\r\n      <div\r\n        className=\"my-select-option\"\r\n        key={i}\r\n        title={category}\r\n        onClick={e => handleSetVal(e.target.title)}\r\n      >\r\n        {category}\r\n      </div>\r\n    ))\r\n  }\r\n  return (\r\n    <section className=\"MySelect\">\r\n      <div className=\"select-container\">\r\n        <p className=\"my-select-label\">Categories</p>\r\n        <div\r\n          className=\"my-select-element\"\r\n          onClick={() => setDisplayElement(!displayElement)}\r\n          onChange={e => setVal(e.target.value)}\r\n        >\r\n          {val}\r\n          <ion-icon name={displayElement ? \"arrow-dropup\" : \"arrow-dropdown\" }></ion-icon>\r\n        </div>\r\n        <div\r\n          className=\"my-select-options\"\r\n          style={displayElement ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          {renderMySelectOptions()}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MySelect;\r\n","import React from \"react\";\r\nimport \"./Quote.css\";\r\n\r\nconst Quote = ({ quote, author }) => {\r\n  return (\r\n    <section className=\"Quote\">\r\n      <div className=\"overlay\">\r\n      {quote ? (\r\n        <blockquote>\r\n          <h2>\"{quote}\"</h2>\r\n          <p>\r\n            - <em>{!author ? \"author unknown\" : author}</em>\r\n          </p>\r\n        </blockquote>\r\n      ) : (\r\n        <h2>Select a category to display a quote here.</h2>\r\n      )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\n\r\n//styles \r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"Spinner\">\r\n      <div className=\"bounce1\"></div>\r\n      <div className=\"bounce2\"></div>\r\n      <div className=\"bounce3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//components\r\nimport MySelect from \"./components/MySelect\";\r\nimport Quote from \"./components/Quote\";\r\nimport Spinner from \"./components/Spinner\";\r\n\r\n//css\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [quote, setQuote] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [date, setDate] = useState(null);\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        let res = await fetch(\"https://quotes.rest/qod/categories.json\");\r\n        let data = await res.json();\r\n        if (res.status === 429)\r\n          alert(\r\n            \"Sorry, you have reached your limit of quotes for the day. Please come back tomorrow!\"\r\n          );\r\n        setLoaded(true);\r\n        setCategories(data.contents.categories);\r\n      } catch (err) {\r\n        errors.length ? setErrors([err, ...errors]) : setErrors([err]);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n    fetchCategory(\"funny\");\r\n    setDate(new Date().getFullYear());\r\n  }, [errors]);\r\n\r\n  const fetchCategory = async category => {\r\n    try {\r\n      let res = await fetch(\r\n        `https://quotes.rest/qod.json?category=${category}`\r\n      );\r\n      let data = await res.json();\r\n      setQuote(data.contents.quotes[0].quote);\r\n      setAuthor(data.contents.quotes[0].author);\r\n    } catch (err) {\r\n      setErrors([err]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Kwotes</h1>\r\n      </header>\r\n      <div className=\"app-instructions\">\r\n        <h2>\r\n          Select a category to generate a <span className=\"kwote\">Kwote</span>{\" \"}\r\n          of the day\r\n        </h2>\r\n      </div>\r\n      {loaded ? (\r\n        <section className=\"categories-quote\">\r\n          <MySelect categories={categories} fetchCategory={fetchCategory} />\r\n          <Quote quote={quote} author={author} />\r\n          <small>Come back tomorrow for new kwotes!</small>\r\n        </section>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n        <footer>\r\n          <small> Kwotes&nbsp;&copy; {date}</small>\r\n          <small>*Disclaimer: The Quotes on this website are not the thoughts and ideas of the creator of this site. All quotes are auto-generated from a public database system.</small>\r\n        </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}